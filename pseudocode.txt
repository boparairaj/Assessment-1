
---------------------------------------------------------------------------------------------------
				Algorithm 1
---------------------------------------------------------------------------------------------------
START

  SET highestMark = -1
  SET lowestMark = 31
  
  FOR each mark in marksList DO
    IF mark > highestMark THEN
      SET highestMark = mark
    END IF

    IF mark < lowestMark THEN
      SET lowestMark = mark
    END IF
  END FOR

  PRINT "Highest Mark: ", highestMark
  PRINT "Lowest Mark: ", lowestMark

END


---------------------------------------------------------------------------------------------------
				Algorithm 2
---------------------------------------------------------------------------------------------------
  Set total to 0
  Set varianceSum to 0

  FOR EACH mark in marksList
      total = total + mark
  END FOR
  
  Compute mean = total / size of marksList

  FOR EACH mark in marksList
      varianceSum = varianceSum + (mark - mean)^2
  END FOR
  
  Compute variance = varianceSum / size of marksList

  Use Babylonian method to calculate square root of variance:
      Set precision to 0.00001
      Set approximation to variance
      REPEAT
          Set previous = approximation
          approximation = 0.5 * (approximation + variance / approximation)
      UNTIL absolute(approximation - previous) < precision

  Set standardDeviation = approximation

  Display "Variance:" and variance
  Display "Mean:" and mean
  Display "Standard Deviation:" and standardDeviation


---------------------------------------------------------------------------------------------------
				Main Function
---------------------------------------------------------------------------------------------------

   PROCEDURE main
      Declare assignmentName as String
      Declare marksList[30] as Real Array
      Declare studentCount as Integer = 0

      OUTPUT "Enter the assignment name:"
      INPUT assignmentName
      
      WHILE studentCount < 30 DO
         OUTPUT "Enter mark for student " + (studentCount + 1) + ":"
         INPUT mark
         
         IF mark >= 0 AND mark <= 30 THEN
            marksList[studentCount] = mark
            studentCount = studentCount + 1
         ELSE
            OUTPUT "Invalid input! Enter a mark between 0 and 30."
         END IF
      END WHILE
      
      OUTPUT "Assignment Name: " + assignmentName
      FOR EACH mark IN marksList
         OUTPUT mark + " "
      END FOR
      OUTPUT newline
      
      CALL findHighestAndLowest(marksList)
      CALL calculateMeanAndStandardDeviation(marksList)
   END PROCEDURE
